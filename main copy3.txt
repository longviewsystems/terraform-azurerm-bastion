#-----------------------------------------------------------------------
# Subnets Creation for Azure Bastion Service 
#-----------------------------------------------------------------------
resource "azurerm_subnet" "bastion_snet" {
  count                = var.azure_bastion_subnet_address_prefix != null ? 1 : 0
  name                 = var.azure_bastion_subnet_name
  resource_group_name  = var.resource_group_name
  virtual_network_name = var.virtual_network_name
  address_prefixes     = var.azure_bastion_subnet_address_prefix
}

module "network_security_group" {
  source                = "Azure/network-security-group/azurerm"
  resource_group_name   = var.resource_group_name
  location              = var.location
  security_group_name   = "bastion"
  custom_rules = [
    {
      name                   = "AllowHttpsInbound"
      priority               = 100
      direction              = "Inbound"
      access                 = "Allow"
      protocol               = "tcp"
      source_port_range      = "*"
      destination_port_range = "443"
      source_address_prefix  = "Internet"
      destination_address_prefix  = "*"
      description            = "description-bastion_in_allow_https"
    },
    {
      name                   = "AllowGatewayManagerInbound"
      priority               = 110
      direction              = "Inbound"
      access                 = "Allow"
      protocol               = "tcp"
      source_port_range      = "*"
      destination_port_range = "443"
      source_address_prefix  = "GatewayManager"
      destination_address_prefix  = "*"
      description            = "description-bastion_in_allow_gatewaymanager"
    },
    {
      name                   = "AllowLoadBalancerInbound"
      priority               = 120
      direction              = "Inbound"
      access                 = "Allow"
      protocol               = "tcp"
      source_port_range      = "*"
      destination_port_range = "443"
      source_address_prefix  = "AzureLoadBalancer"
      destination_address_prefix  = "*"
      description            = "description-bastion_in_allow_loadbalancer"
    },
    {
      name                   = "AllowBastionHostCommunication"
      priority               = 130
      direction              = "Inbound"
      access                 = "Allow"
      protocol               = "*"
      source_port_range      = "*"
      destination_port_ranges = [8080, 5701]
      source_address_prefix  = "VirtualNetwork"
      destination_address_prefix  = "VirtualNetwork"
      description            = "description-bastion_in_allow_bastioncommunication"
    },
    {
      name                   = "AllowSshRdpOutbound"
      priority               = 100
      direction              = "Outbound"
      access                 = "Allow"
      protocol               = "*"
      source_port_range      = "*"
      destination_port_ranges     = [22, 3389]
      source_address_prefix  = "*"
      destination_address_prefix  = "VirtualNetwork"
      description            = "description-bastion_out_allow_sshrdps"
    },
    {
      name                   = "AllowAzureCloudOutbound"
      priority               = 110
      direction              = "Outbound"
      access                 = "Allow"
      protocol               = "tcp"
      source_port_range      = "*"
      destination_port_range = "443"
      source_address_prefix  = "*"
      destination_address_prefix  = "AzureCloud"
      description            = "description-bastion_out_allow_azurecloud"
    },
    {
      name                   = "AllowBastionCommunication"
      priority               = 120
      direction              = "Outbound"
      access                 = "Allow"
      protocol               = "*"
      source_port_range      = "*"
      destination_port_ranges     = [8080, 5701]
      source_address_prefix       = "VirtualNetwork"
      destination_address_prefix  = "VirtualNetwork"
      description            = "description-bastion_out_allow_bastion_communication"
    },
    {
      name                   = "AllowGetSessionInformation"
      priority               = 130
      direction              = "Outbound"
      access                 = "Allow"
      protocol               = "*"
      source_port_range      = "*"
      destination_port_range      = "80"
      source_address_prefix  = "*"
      destination_address_prefix  = "Internet"
      description            = "description-bastion_out_allow_http"
    },
  ]

  tags = var.tags
  depends_on = [azurerm_subnet.bastion_snet]
}


resource "azurerm_subnet_network_security_group_association" "bastion" {
  subnet_id                 = azurerm_subnet.bastion_snet.0.id
  network_security_group_id = module.network_security_group.id
  depends_on = [module.network_security_group]
}


#---------------------------------------------
# Public IP for Azure Bastion Service
#---------------------------------------------
resource "azurerm_public_ip" "pip" {
  name                = lower("${var.azure_bastion_service_name}-${var.location}-pip")
  location            = var.location
  resource_group_name = var.resource_group_name
  allocation_method   = var.public_ip_allocation_method
  sku                 = var.public_ip_sku
  domain_name_label   = var.domain_name_label
  tags                = merge({ "ResourceName" = lower("${var.azure_bastion_service_name}-${var.location}-pip") }, var.tags, )

  lifecycle {
    ignore_changes = [
      tags,
      ip_tags,
    ]
  }
}

#---------------------------------------------
# Azure Bastion Service host
#---------------------------------------------
resource "azurerm_bastion_host" "main" {
  name                   = lower(var.azure_bastion_service_name)
  location               = var.location
  resource_group_name    = var.resource_group_name
  copy_paste_enabled     = var.enable_copy_paste
  file_copy_enabled      = var.bastion_host_sku == "Standard" ? var.enable_file_copy : null
  sku                    = var.bastion_host_sku
  ip_connect_enabled     = var.enable_ip_connect
  scale_units            = var.bastion_host_sku == "Standard" ? var.scale_units : 2
  shareable_link_enabled = var.bastion_host_sku == "Standard" ? var.enable_shareable_link : null
  tunneling_enabled      = var.bastion_host_sku == "Standard" ? var.enable_tunneling : null
  tags                   = merge({ "ResourceName" = lower(var.azure_bastion_service_name) }, var.tags, )

  ip_configuration {
    name                 = "${lower(var.azure_bastion_service_name)}-network"
    subnet_id            = azurerm_subnet.bastion_snet.0.id
    public_ip_address_id = azurerm_public_ip.pip.id
  }
}
